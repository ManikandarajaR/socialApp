{"version":3,"sources":["reportWebVitals.js","test.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Test","props","handleChange","event","setState","target","name","value","console","log","handleSubmit","data","segment_name","state","schema","first_name","fname","last_name","lname","fetch","method","body","JSON","stringify","response","json","preventDefault","onSubmit","this","type","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,0CCwDEQ,E,kDA5DX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,aAAe,SAACC,GACd,EAAKC,SAAL,eAAgBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,QACjDC,QAAQC,IAAIN,EAAME,OAAOE,QAbR,EAgBnBG,aAAe,SAACP,GAGd,IAAIQ,EAAO,CAERC,aAAc,EAAKC,MAAMP,KACzBQ,OAAQ,CACP,CAAEC,WAAW,EAAKF,MAAMG,OACvB,CAAEC,UAAU,EAAKJ,MAAMK,SAI5BC,MAAM,4DAA6D,CAC/DC,OAAQ,OAERC,KAAMC,KAAKC,UAAUZ,KAEvBjB,MAAK,SAAS8B,GAEZ,OADAhB,QAAQC,IAAIe,GACLA,EAASC,UAGpBtB,EAAMuB,kBAnCN,EAAKb,MAAQ,CACVP,KAAM,GACNY,MAAM,GACNF,MAAM,IANQ,E,0CAyCnB,WACE,OACE,uBAAMW,SAAUC,KAAKlB,aAArB,0BAGI,uBAAOmB,KAAK,OAAOtB,MAAOqB,KAAKf,MAAMN,MAAOD,KAAK,OAAOwB,SAAUF,KAAK1B,eAH3E,cAMI,uBAAO2B,KAAK,OAAOtB,MAAOqB,KAAKf,MAAMN,MAAOD,KAAK,QAAQwB,SAAUF,KAAK1B,eAN5E,aASI,uBAAO2B,KAAK,OAAOtB,MAAOqB,KAAKf,MAAMN,MAAOD,KAAK,QAAQwB,SAAUF,KAAK1B,eAG1E,uBAAO2B,KAAK,SAAStB,MAAM,kB,GAxDnBwB,IAAMC,WCKzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1B9C,M","file":"static/js/main.6200517c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React  from  \"react\";\r\n\r\nclass Test extends React.Component {\r\n     constructor(props) {\r\n       super(props);\r\n\r\n       this.state = {\r\n          name: \"\",\r\n          lname:\"\",\r\n          fname:\"\"\r\n      };\r\n\r\n     }\r\n   \r\n     handleChange = (event) => {\r\n       this.setState({[event.target.name]: event.target.value});\r\n       console.log(event.target.value);\r\n     }\r\n   \r\n     handleSubmit = (event) => {\r\n    \r\n   \r\n       let data = {\r\n\r\n          segment_name: this.state.name,\r\n          schema: [\r\n           { first_name:this.state.fname },\r\n            { last_name:this.state.lname }\r\n          ]\r\n          }\r\n\r\n       fetch('https://webhook.site/1f900d3c-4229-4c58-a301-c115806e4f80', {\r\n           method: 'POST',\r\n           // We convert the React state to JSON and send it as the POST body\r\n           body: JSON.stringify(data)\r\n         }).\r\n         then(function(response) {\r\n           console.log(response)\r\n           return response.json();\r\n         });\r\n   \r\n       event.preventDefault();\r\n   }\r\n   \r\n     render() {\r\n       return (\r\n         <form onSubmit={this.handleSubmit}>\r\n\r\n             Segment Name:\r\n             <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} />\r\n         \r\n             First Name:\r\n             <input type=\"text\" value={this.state.value} name=\"fname\" onChange={this.handleChange} />\r\n\r\n             Last Name:\r\n             <input type=\"text\" value={this.state.value} name=\"lname\" onChange={this.handleChange} />\r\n    \r\n\r\n           <input type=\"submit\" value=\"Submit\" />\r\n         </form>\r\n       );\r\n     }\r\n   }\r\nexport  default Test;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Test from './test';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Test/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}